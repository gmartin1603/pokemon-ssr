import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { storage } from '@/firebase/firebaseApp'
import { getDownloadURL, listAll, ref, uploadBytes } from "firebase/storage";

export default function Home() {
  const [pokemon, setPokemon] = useState([])
  const [imageUpload, setImageUpload] = useState([])

  // Create a storage reference from our storage service
  const storageRef = ref(storage, 'images/');

  const uploadImage = (e) => {
    e.preventDefault();
    console.log(imageUpload)
    if (imageUpload === null) return;

    imageUpload.map((image) => {
      const uploadTask = ref(storage, `images/${image.name}`)

      uploadBytes(uploadTask, image)
      .then((snapshot) => {
        let url = getDownloadURL(snapshot.ref)
        console.log(url);
      });
    })
  }

  const handleFileList = (e) => {
    for (const file of e.target.files) {
      setImageUpload((prev) => [...prev, file])
    }
  }

  useEffect(() => {
    if (pokemon.length > 0) return;
    (async () => {
      const allImgs = await listAll(storageRef)
      .then((res) => {
        let arr = []
        res.items.forEach((itemRef,index) => {
          getDownloadURL(itemRef)
          .then((url) => {
              // console.log(url)
              // arr.push({url: url, name: itemRef.name, key: index})
              // console.log(arr)
              setPokemon(prev => ([...prev, {url: url, name: itemRef.name, key: index}]))
            })
          })
          return arr
        })
        .catch((error) => {
          console.log(error)
        })
        console.log(allImgs)
        // setPokemon(allImgs)
        return allImgs
      })()
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Pokemon Stats</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <h1>Pokemon Stats</h1>
        <input type="file" multiple onChange={(e) => handleFileList(e)} />
        <button onClick={(e) => uploadImage(e)}> Upload Image </button>
      <div>
        {pokemon.map((item) => {
          return (
            <img src={item.url} alt={item.name} key={item.key} width="10%" />
          )
        })
        }

      </div>
    </div>
  )
}
